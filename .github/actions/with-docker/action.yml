name: 'With Docker'
description: 'Run a given stage with Docker Image'
inputs:
  container-name:
    description: 'Docker container name to use'
    type: string
    required: true
  tag-name:
    description: 'Docker image tag to use'
    type: string
    required: false
    default: pi2/kevm
  subdir:
    description: 'Subdirectory where code is cloned.'
    required: false
    type: string
    default: './'
  os: 
    description: 'OS to setup Docker for.'
    required: false
    type: string
    default: 'ubuntu'
  distro:
    description: 'Distribution to setup Docker for.'
    required: false
    type: string
    default: 'noble'
  llvm:
    description: 'LLVM version to use.'
    required: false
    type: number
    default: 16
  dockerfile:
    description: 'Hardcode the path of the dockerfile to use.'
    required: false
    type: string
    default: '.github/workflows/Dockerfile.vlm'
  github-app-id:
    description: 'GitHub App ID for token generation'
    required: true
    type: string
  github-app-private-key:
    description: 'GitHub App private key for token generation'
    required: true
    type: string
runs:
  using: 'composite'
  steps:
  - uses: actions/create-github-app-token@v1
    id: temp-token
    name: Generate temporary GitHub Token
    with:
      app-id: "${{ inputs.github-app-id }}"
      private-key: "${{ inputs.github-app-private-key }}"
      owner: "${{ github.repository_owner }}"

  - name: 'Set up Docker'
    shell: bash
    run: |
      set -euxo pipefail

      CONTAINER_NAME=${{ inputs.container-name }}
      DOCKERFILE=${{ inputs.dockerfile }}
      LLVM_VERSION=${{ inputs.llvm }}
      TAG_NAME=${{ inputs.tag-name }}

      GITHUB_ACTOR=${{ github.actor }}
      GITHUB_TOKEN=${{ steps.temp-token.outputs.token }}
      EVM_BRANCH=${{ github.head_ref || github.ref_name }}
      VLM_BRANCH=main
      WORKSPACE=${{ github.workspace }}
      USER=test-user
      GROUP=test-user

      docker build . --file ${DOCKERFILE}          \
        --tag ${TAG_NAME}                          \
        --build-arg USER="${USER}"                 \
        --build-arg GROUP="${GROUP}"               \
        --build-arg GITHUB_TOKEN="${GITHUB_TOKEN}" \
        --build-arg GITHUB_ACTOR="${GITHUB_ACTOR}" \
        --build-arg EVM_BRANCH="${EVM_BRANCH}"     \
        --build-arg VLM_BRANCH="${VLM_BRANCH}"     \

      docker run -d --name ${CONTAINER_NAME} \
        --user ${USER} \
        -v ${WORKSPACE}:/workspace \
        ${TAG_NAME} \
        tail -f /dev/null  # Keep container running

      # Give the container a moment to start
      sleep 2


